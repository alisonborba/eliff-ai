{
  "info": {
    "name": "Eliff AI - Legal Mediation Platform API",
    "description": "Complete API collection for the Eliff AI legal mediation platform. Includes user management, case management, file uploads, and mediation panel operations.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://mediatiff.vercel.app",
      "type": "string"
    },
    {
      "key": "apiVersion",
      "value": "v1",
      "type": "string"
    }
  ],
  "auth": {
    "type": "noauth"
  },
  "item": [
    {
      "name": "Users",
      "description": "User management operations",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Retrieve all users in the system with their addresses"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "users"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": \"uuid\",\n      \"name\": \"John Doe\",\n      \"birthday\": \"1990-01-01\",\n      \"gender\": \"Male\",\n      \"email\": \"john@example.com\",\n      \"phone\": \"+1234567890\",\n      \"photoUrl\": \"https://example.com/photo.jpg\",\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n      \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n      \"address\": {\n        \"id\": \"uuid\",\n        \"street\": \"123 Main St\",\n        \"city\": \"New York\",\n        \"zipCode\": \"10001\",\n        \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n      }\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"birthday\": \"1990-01-01\",\n  \"gender\": \"Male\",\n  \"email\": \"john@example.com\",\n  \"phone\": \"+1234567890\",\n  \"photoUrl\": \"https://example.com/photo.jpg\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"zipCode\": \"10001\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Create a new user with optional address information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"birthday\": \"1990-01-01\",\n  \"gender\": \"Male\",\n  \"email\": \"john@example.com\",\n  \"phone\": \"+1234567890\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"zipCode\": \"10001\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "users"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"uuid\",\n    \"name\": \"John Doe\",\n    \"birthday\": \"1990-01-01\",\n    \"gender\": \"Male\",\n    \"email\": \"john@example.com\",\n    \"phone\": \"+1234567890\",\n    \"photoUrl\": \"https://example.com/photo.jpg\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n    \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n    \"address\": {\n      \"id\": \"uuid\",\n      \"street\": \"123 Main St\",\n      \"city\": \"New York\",\n      \"zipCode\": \"10001\",\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Cases",
      "description": "Case management operations",
      "item": [
        {
          "name": "Get All Cases",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cases",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cases"]
            },
            "description": "Retrieve all cases with related user and witness information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cases",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "cases"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"data\": [\n    {\n      \"id\": \"uuid\",\n      \"caseType\": \"FAMILY\",\n      \"description\": \"Family dispute case\",\n      \"legalStatus\": \"PENDING_IN_COURT\",\n      \"legalExtraInfo\": \"CASE-001\",\n      \"proofFiles\": [\"https://example.com/file1.jpg\"],\n      \"status\": \"PENDING\",\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n      \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n      \"claimant\": {\n        \"id\": \"uuid\",\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\",\n        \"phone\": \"+1234567890\",\n        \"address\": {\n          \"street\": \"123 Main St\",\n          \"city\": \"New York\",\n          \"zipCode\": \"10001\"\n        }\n      },\n      \"oppositeParty\": {\n        \"id\": \"uuid\",\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane@example.com\",\n        \"phone\": \"+0987654321\",\n        \"address\": {\n          \"street\": \"456 Oak Ave\",\n          \"city\": \"Los Angeles\",\n          \"zipCode\": \"90210\"\n        }\n      },\n      \"witnesses\": [\n        {\n          \"id\": \"uuid\",\n          \"name\": \"Witness Name\",\n          \"contact\": \"witness@example.com\"\n        }\n      ]\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Create Case",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"caseType\": \"FAMILY\",\n  \"description\": \"Family dispute case description\",\n  \"legalStatus\": \"PENDING_IN_COURT\",\n  \"legalExtraInfo\": \"CASE-001\",\n  \"claimantId\": \"claimant-user-id\",\n  \"oppositePartyId\": \"opposite-party-user-id\",\n  \"oppositePartyEmail\": \"opposite@example.com\",\n  \"witnesses\": [\n    {\n      \"name\": \"Witness Name\",\n      \"contact\": \"witness@example.com\"\n    }\n  ],\n  \"proofFiles\": [\n    \"https://example.com/file1.jpg\",\n    \"https://example.com/file2.pdf\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cases",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cases"]
            },
            "description": "Create a new case with required fields. Sends email notification to opposite party and updates case status."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"caseType\": \"FAMILY\",\n  \"description\": \"Family dispute case description\",\n  \"claimantId\": \"claimant-user-id\",\n  \"oppositePartyId\": \"opposite-party-user-id\",\n  \"oppositePartyEmail\": \"opposite@example.com\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/cases",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "cases"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"uuid\",\n    \"caseType\": \"FAMILY\",\n    \"description\": \"Family dispute case description\",\n    \"legalStatus\": \"PENDING_IN_COURT\",\n    \"legalExtraInfo\": \"CASE-001\",\n    \"proofFiles\": [\"https://example.com/file1.jpg\"],\n    \"status\": \"AWAITING_RESPONSE\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n    \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n    \"claimant\": {\n      \"id\": \"uuid\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"oppositeParty\": {\n      \"id\": \"uuid\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"witnesses\": [\n      {\n        \"id\": \"uuid\",\n        \"name\": \"Witness Name\",\n        \"contact\": \"witness@example.com\"\n      }\n    ]\n  }\n}"
            },
            {
              "name": "Validation Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"caseType\": \"FAMILY\",\n  \"description\": \"Case description\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/cases",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "cases"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"error\",\n  \"message\": \"Required fields: caseType, description, claimantId, oppositePartyId, oppositePartyEmail\"\n}"
            }
          ]
        },
        {
          "name": "Get Case by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cases/{{caseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cases", "{{caseId}}"],
              "variable": [
                {
                  "key": "caseId",
                  "value": "case-uuid-here",
                  "description": "The ID of the case to retrieve"
                }
              ]
            },
            "description": "Retrieve a specific case by its ID with all related information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cases/uuid",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "cases", "uuid"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"data\": {\n    \"id\": \"uuid\",\n    \"caseType\": \"FAMILY\",\n    \"description\": \"Family dispute case description\",\n    \"legalStatus\": \"PENDING_IN_COURT\",\n    \"legalExtraInfo\": \"CASE-001\",\n    \"proofFiles\": [\"https://example.com/file1.jpg\"],\n    \"status\": \"PENDING\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n    \"updatedAt\": \"2024-01-01T00:00:00.000Z\",\n    \"claimant\": {\n      \"id\": \"uuid\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\",\n      \"phone\": \"+1234567890\",\n      \"address\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"New York\",\n        \"zipCode\": \"10001\"\n      }\n    },\n    \"oppositeParty\": {\n      \"id\": \"uuid\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\",\n      \"phone\": \"+0987654321\",\n      \"address\": {\n        \"street\": \"456 Oak Ave\",\n        \"city\": \"Los Angeles\",\n        \"zipCode\": \"90210\"\n      }\n    },\n    \"witnesses\": [\n      {\n        \"id\": \"uuid\",\n        \"name\": \"Witness Name\",\n        \"contact\": \"witness@example.com\"\n      }\n    ],\n    \"panel\": {\n      \"id\": \"uuid\",\n      \"lawyerId\": \"lawyer-uuid\",\n      \"religiousId\": \"religious-uuid\",\n      \"communityRepId\": \"community-rep-uuid\",\n      \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n    }\n  }\n}"
            },
            {
              "name": "Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/cases/non-existent-id",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "cases", "non-existent-id"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"error\",\n  \"message\": \"Case not found\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "File Upload",
      "description": "File upload operations using Vercel Blob",
      "item": [
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": [],
                  "description": "File to upload (images, videos, documents)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/upload?filename={{filename}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "upload"],
              "query": [
                {
                  "key": "filename",
                  "value": "{{filename}}",
                  "description": "Name for the uploaded file"
                }
              ]
            },
            "description": "Upload a file to Vercel Blob storage. Returns the public URL of the uploaded file."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/api/upload?filename=document.pdf",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "upload"],
                  "query": [
                    {
                      "key": "filename",
                      "value": "document.pdf"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"url\": \"https://blob.vercel-storage.com/your-bucket/document.pdf\",\n  \"pathname\": \"/document.pdf\",\n  \"contentType\": \"application/pdf\",\n  \"contentDisposition\": \"attachment; filename=\\\"document.pdf\\\"\",\n  \"size\": 1024,\n  \"uploadedAt\": \"2024-01-01T00:00:00.000Z\"\n}"
            },
            {
              "name": "Missing Filename",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/api/upload",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "upload"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Filename is required\"\n}"
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default headers for all requests",
          "pm.request.headers.add({\n    key: 'Accept',\n    value: 'application/json'\n});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test script for all requests",
          "pm.test(\"Status code is 200 or 201\", function () {\n    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\n});",
          "",
          "pm.test(\"Response has required structure\", function () {\n    const jsonData = pm.response.json();\n    pm.expect(jsonData).to.have.property('status');\n    if (jsonData.status === 'success') {\n        pm.expect(jsonData).to.have.property('data');\n    }\n});"
        ]
      }
    }
  ]
}
